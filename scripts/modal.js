"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
// Первое модальное окно
var buttonProduct = document.querySelector('.product__preview');
var modalProduct = document.querySelector('.modal-product');
var closeModalProduct = function closeModalProduct(event) {
  var target = event.target;
  if (target === modalProduct || target.closest('.modal-product__close')) {
    modalProduct.style.visibility = 'hidden';
    modalProduct.style.opacity = 0;
  }
};
var openModalProduct = function openModalProduct() {
  modalProduct.style.visibility = 'visible';
  modalProduct.style.opacity = 1;
};
buttonProduct.addEventListener('click', openModalProduct);
buttonProduct.addEventListener('click', openModalProduct);
modalProduct.addEventListener('click', closeModalProduct);

// Второе модальное окно
var buttonBuy = document.querySelector('.product__btn-buy');
var modalBuy = document.querySelector('.modal');
var closeModal = function closeModal(event) {
  var target = event.target;
  if (target === modalBuy || target.closest('.modal__close')) {
    modalBuy.style.visibility = 'hidden';
    modalBuy.style.opacity = 0;
  }
};
var openModal = function openModal() {
  modalBuy.style.visibility = 'visible';
  modalBuy.style.opacity = 1;
};
buttonBuy.addEventListener('click', openModal);
modalBuy.addEventListener('click', closeModal);
modalBuy.addEventListener('successBuy', closeModal);
var validation2 = new JustValidate('.modal__form', {
  colorWrong: '#bb370e'
});
validation2.addField('.modal-name', [{
  rule: 'minLength',
  value: 2,
  errorMessage: 'Вы не ввели имя'
}, {
  rule: 'maxLength',
  value: 30,
  errorMessage: 'Вы ввели больше, чем положено'
}, {
  rule: 'required',
  value: true,
  errorMessage: 'Вы не ввели имя'
}]).addField('.modal-tel', [{
  rule: 'required',
  value: true,
  errorMessage: 'Вы не ввели телефон'
}, {
  rule: 'number',
  errorMessage: 'Номер телефона содержит только цифры'
}, {
  rule: 'minLength',
  value: 11,
  errorMessage: 'Номер телефона должен содержать 11 цифр'
}, {
  rule: 'maxLength',
  value: 11,
  errorMessage: 'Номер телефона должен содержать 11 цифр'
}]).onSuccess(function (event) {
  var _console;
  console.log('Validation passes and form submitted', event);
  var successEvent = new Event("successBuy");
  modalBuy.dispatchEvent(successEvent);
  openModalCall();
  var formData = new FormData(event.target);
  (_console = console).log.apply(_console, _toConsumableArray(formData));
});

// Третье модальное окно
var modalCall = document.querySelector('.modal-call');
var modalBtn = document.querySelector('.modal__btn');
var closeModalCall = function closeModalCall(event) {
  var target = event.target;
  if (target === modalCall || target.closest('.modal-call__close')) {
    modalCall.style.visibility = 'hidden';
    modalCall.style.opacity = 0;
  }
};
var openModalCall = function openModalCall() {
  modalCall.style.visibility = 'visible';
  modalCall.style.opacity = 1;
};
modalCall.addEventListener('click', closeModalCall);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
